/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import org.junit.jupiter.api.Test;

import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void mappingTesting() {
        App classUnderTest = new App();
        int[][] array = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        assertNotNull(classUnderTest.mapping(array));
    }

    @Test
    void tallyTesting() {
        App classUnderTest = new App();
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = classUnderTest.tally(votes);
        assertEquals("Bush received the most votes", winner + " received the most votes", "test failed we will get them next time");
    }

/*
    @Test
    void linterTesting() {
        App classUnderTesting = new App();
        Path path = Path.of("app/src/main/resources/gate.js");
       assertEquals("Line 3 : Missing semicolon.\n" +
               "Line 5 : Missing semicolon.\n" +
               "Line 11 : Missing semicolon.\n" +
               "Line 13 : Missing semicolon.\n" +
               "Line 15 : Missing semicolon.\n" +
               "Line 26 : Missing semicolon.\n" +
               "Line 28 : Missing semicolon.\n" +
               "Line 32 : Missing semicolon.\n" +
               "Line 36 : Missing semicolon.\n" +
               "Line 40 : Missing semicolon.\n" +
               "Line 41 : Missing semicolon.\n" +
               "Line 42 : Missing semicolon.\n" +
               "Line 50 : Missing semicolon.\n" +
               "Line 51 : Missing semicolon.\n" +
               "Line 59 : Missing semicolon.\n" +
               "Line 60 : Missing semicolon.\n" +
               "Line 61 : Missing semicolon.\n" +
               "Line 62 : Missing semicolon.\n" +
               "Line 64 : Missing semicolon.\n" +
               "Line 70 : Missing semicolon.\n" +
               "Line 71 : Missing semicolon.\n" +
               "Line 72 : Missing semicolon.\n" +
               "Line 73 : Missing semicolon.\n" +
               "Line 74 : Missing semicolon.\n" +
               "Line 76 : Missing semicolon.\n" +
               "Line 77 : Missing semicolon.\n" +
               "Line 78 : Missing semicolon.\n" +
               "Line 79 : Missing semicolon.\n" +
               "Line 80 : Missing semicolon.\n" +
               "Line 82 : Missing semicolon.\n" +
               "Line 83 : Missing semicolon.\n" +
               "Line 84 : Missing semicolon.\n" +
               "Line 85 : Missing semicolon.\n" +
               "Line 86 : Missing semicolon.\n" +
               "Line 88 : Missing semicolon.\n" +
               "Line 89 : Missing semicolon.\n" +
               "Line 90 : Missing semicolon.\n" +
               "Line 91 : Missing semicolon.\n" +
               "Line 92 : Missing semicolon.\n" +
               "Line 94 : Missing semicolon.\n" +
               "Line 95 : Missing semicolon.\n" +
               "Line 96 : Missing semicolon.\n" +
               "Line 97 : Missing semicolon.\n" +
               "Line 98 : Missing semicolon.\n" +
               "Line 99 : Missing semicolon.\n" +
               "Line 100 : Missing semicolon.\n" +
               "Line 101 : Missing semicolon.", classUnderTesting.linter(path));
    }
*/

}
